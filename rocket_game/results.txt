Earlier reward function of rewarding every parameter independently didn't work
out at all because zero rotation is useless when your nose is pointing downwards.
That's why I started rewarding landing successfully as a whole and then just adding
gaussian terms to perfect it.

Too much fuel punishement is also bad because it will just do nothing anymore.
Added some slight rewards for x- and y-velocities at tuchdown to guide learning

It's always doing nothing but that's actually super stupid in my opinion.
It even encountered some good landings by accident, why isn't it going for those?
I think the complexity of the game might be too high so I will reduce how far
off to the left and right the rocket can spawn

Didn't work too, as expected ...
Now I'm starting really basic, spawn rocket in the center of the screen and just
try to hover it there, no randomnes, no difficulties. I even added the control
nozzles to make it easier. The reward function is Potential Based

Hovering seems to be quite promising actually, Episode 265 right now, doesn't do
it yet but there is progress clearly visible

Hovering works now, not perfectly but it can stay upright for a long time already.

The Hovering was actually not as good as I expected because it always overshot.
To continue with new experiments I need it to be dead on though so I worked on
reward shaping now. Added a term for velocity, angle and angular velocity all
of which are supposed to be zero and all of the are quadratic Potentials. Not really
the results from before but maybe with a bit of tweaking ...
Looking into a new random noise precess for exploration now. Random jittering doesn't
really do the trick for obvious reasons so I found the Ohrnstein-Uhlenbeck-Process
which seems to be promising but is continuous, not the right thing for my discrete
action space. I could discretefy it but it would make more sense if the actions
were in a logical order from most left to most right for that to work and that's
kind of not practical with main engine and control nozzles bein in one action space
so I decided to look into seperating those into independent action sets with
seperate noise precesses.